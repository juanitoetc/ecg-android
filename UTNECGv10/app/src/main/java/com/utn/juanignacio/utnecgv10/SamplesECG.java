package com.utn.juanignacio.utnecgv10;

import java.io.Serializable;
import java.util.Arrays;

/**
 * Created by JuanIgnacio on 10/10/2015.
 */
public final class SamplesECG implements Serializable {

        public double fs;
        public int[] Samples;
        public double AVSS_mV = -3300;      //negative analogic reference to ground
        public double AVDD_mV = 3300;       //positive analogic reference to ground
        public double ADC_bits = 24;
        public double ADC_Amp = 6;

        public SamplesECG() {
                //instancia
                fs = 500;            //Frecuencia de muestreo
                //Muestras ejemplo creadas con ruido baja frecuencia (respiracion) y agregado de 50Hz
                Samples = new int[]{};
        }

        public SamplesECG(int[] muestras) {

                fs = 500;            //Frecuencia de muestreo
                Samples = new int[muestras.length];
                Samples = muestras;
        }

        public String getSamplesInString (int[] muestras){

            String str_samples = Arrays.toString(muestras);
            return str_samples;
        }

        public String[] getSamplesInMatrix(String muestras){

            String s[] = muestras.split(",");

            return s;
    }

    public int[] getSamplesInIntArray (String[] s){

        /*La primera y la ultima muestra tienen los caracteres [], hay que sacarlos*/
        int[] recup = new int[s.length];

        for(int curr = 0; curr<s.length; curr++)
        {
            /*Elimino el primer simbolo extranio que es [*/
            if(curr == 0) {
                recup[0] = Integer.parseInt(s[0].substring(1));
            }
            else if (curr == (s.length)-1){
                    /*Elimino el ultimo simbolo extranio ]*/
                recup[curr] = Integer.parseInt(s[curr].substring(1,s[curr].length()-1));
            }
            else {
                    /*Atencion, al hacer el plit tambien me guarda los espacios*/
                recup[curr] = Integer.parseInt(s[curr].substring(1, s[curr].length()));
            }
        }

        return recup;
    }

    public double[] getSamplesInmV(int[] samp_int) {

        double[] sam_mV = new double[samp_int.length];
        int i = 0;
        double rangeADCmV = AVDD_mV - AVSS_mV;  //rango dinamico de tension del adc
        double steps = java.lang.Math.pow(2, ADC_bits);

        for(i=0;i<samp_int.length;i++){
            sam_mV[i] = (double) ((samp_int[i]*rangeADCmV)/(steps))/(ADC_Amp);
        }
        return sam_mV;
    }
}